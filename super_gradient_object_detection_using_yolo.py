# -*- coding: utf-8 -*-
"""Super Gradient Object Detection using YOLO

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E20fpZoW854x7V8V31ugR6OjBeOjQQcI
"""

from google.colab import drive
drive.mount('/content/gdrive')

!pip install super-gradients

import super_gradients
from super_gradients.training import models
from super_gradients.common.object_names import Models

yolo_nas = super_gradients.training.models.get('yolo_nas_l', pretrained_weights= "coco")

!pip install torchinfo
from torchinfo import summary

summary(model =yolo_nas, input_size= (16,3,640,640), # 16 channels and a resolution of 640x640
 col_names =['input_size','output_size','num_params','trainable'],
 col_width =20, row_settings =['var_names'])

img_file2 ='/content/gdrive/MyDrive/yolov8nas/abbey-road-lp-by-the-beatles-1969-stereo-version-apple-records-pcs-CX4JAM.jpg'
yolo_nas.predict(img_file2, conf =0.25).show()

img_file2 ='/content/gdrive/MyDrive/yolov8nas/car.jfif'
yolo_nas.predict(img_file2, conf =0.25).show()

img_file2 ='/content/gdrive/MyDrive/yolov8nas/food.jpg'
yolo_nas.predict(img_file2, conf =0.25).show()

yolox = super_gradients.training.models.get(Models.YOLOX_S, pretrained_weights="coco")
yolox.predict(img_file2, conf=0.25).show()

resnet = super_gradients.training.models.get(Models.RESNET50, pretrained_weights="imagenet")
resnet.predict(img_file2).show()

img_file2 ='/content/gdrive/MyDrive/yolov8nas/car.jfif'
yolo_nas.predict(img_file2, conf =0.25).show()


resnet = super_gradients.training.models.get(Models.RESNET50, pretrained_weights="imagenet")
resnet.predict(img_file2).show()

yolo_nas_pose = super_gradients.training.models.get("yolo_nas_pose_l", pretrained_weights="coco_pose")
yolo_nas_pose = yolo_nas_pose.to("cpu")  # Move the model to CPU
model_predictions = yolo_nas_pose.predict(img_file2, conf=0.5).show()

import requests
from PIL import Image
from io import BytesIO

# Assuming you have already loaded the model (yolo_nas_pose) as before

pose_urls = [
    'https://i.pinimg.com/originals/ac/61/dc/ac61dc446d0c6b97e74283cafc0945ef.jpg',
    'https://criccrunch.com/wp-content/uploads/2023/03/WhatsApp-Image-2023-03-01-at-12.11.59-PM.jpeg',
    'https://static.toiimg.com/photo/73174476.cms'


]

for pose_url in pose_urls:
    response = requests.get(pose_url)
    img = Image.open(BytesIO(response.content))
    yolo_nas_pose.predict(img, conf=0.5).show()



